continue
price_freight
continue
freight_finds
continue
next
freight_finds
next
generator
continue
response
response.class 
response.class == String
response
continue
generator
weight_cubage
continue
generator.price
continue
generator[0].height
generator.height
generator.price
generator
continue
generator_id
generator.ids
generator.id
generator
generator[:price]
generator[:price].to_i
generator[:price].to_d
generator[:price].to_f
generator[:price].to_s
generator[:price]
generator['price]
generator['price']
generator
generator.price.to_s
generator.price
generator.name
generator
generator.price
continue
generator.price
generator.length
generator[2]
generator[1]
generator.price
generator
generator.width
generator
generator.width
generator.widht
exit
freight_find
generator
continue
next
continue
exit
address
next
params[:data]
continue
response.class == Array
response.present?
response
continue
power_generators.class == String
power_generators.class
power_generators
continue
params[:data]
continue
data
continue
data
datas
generato.description.include?("falhas")
generato.description.include?(falhas)
generato.description.include
generato.description
generato
generator
continue
@q.sorts
continue
exit
ext
exit
continue
@q.s
@q.methods
@q.r
@q.methods
@q.inspect
@q
params[:q]
continue
